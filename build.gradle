apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'im.dlg'

if (System.getenv('CI_COMMIT_REF_SLUG') == null) {
    version= "local-snapshot"
}
else {
    if (System.getenv('CI_COMMIT_REF_SLUG') == "master") {
        version = System.getenv('CI_COMMIT_REF_SLUG')
    } 
    else {
        version = System.getenv('CI_COMMIT_REF_SLUG') + '-' + System.getenv('CI_JOB_ID')
    }
}

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    jcenter()
}

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.8.8"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

dependencies {
    compile 'io.grpc:grpc-okhttp:1.17.1'
    compile 'io.grpc:grpc-protobuf:1.17.1'
    compile 'io.grpc:grpc-stub:1.17.1'

    protobuf files('./server.proto')
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.6.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.17.1'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += 'build/generated/source/proto/main/java'
            srcDirs += 'build/generated/source/proto/main/grpc'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            artifactId = 'server-api-calls-sdk'
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    publish = true
    pkg {
        repo = 'dlg'
        name = 'server-api-calls-sdk'
        userOrg = 'dialog'
        vcsUrl = 'https://gitlab.transmit.im/sdk/calls/server-api-calls-sdk'
    }
}