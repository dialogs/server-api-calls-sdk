buildscript {
    repositories {
        maven { 
            url "https://nexus.transmit.im/repository/maven-all/"
            credentials {
                username mavenUser
                password mavenPassword
            }
        }
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.8"
    }
}

plugins {
    id 'net.researchgate.release' version '2.8.0'
    id "com.jfrog.bintray" version "1.8.4"
}



apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'


group = 'im.dlg'
version = '2.19.0'//System.getenv('version') ?: System.getenv('PACKAGE_VERSION')


def jobId = System.getenv('BUILD_NUMBER') ?: 'SNAPSHOT'

if (version == null) {
  if (System.getenv('BRANCH_NAME') == null) {
      version = version + "-local-" + jobId
  }
  else if (System.getenv('BRANCH_NAME').startsWith ("release/")) {
      version = version + "-RELEASE"
  }
//  else if (System.getenv('BRANCH_NAME') != "master") {
//      version = version + '-' + System.getenv('CI_COMMIT_REF_SLUG') + '-' + jobId
//  }
}

ext {
    // bintrayUser = "deminnsk"
    // bintrayPassword = ""
    artifactId = 'server-api-calls-sdk'
    libraryDescription = 'calls api'
}


repositories {
    maven { 
        url "https://nexus.transmit.im/repository/maven-all/"
        credentials {
            username mavenUser
            password mavenPassword
        }
    }
}


dependencies {
    compile 'io.grpc:grpc-okhttp:1.17.1'
    compile 'io.grpc:grpc-protobuf:1.17.1'
    compile 'io.grpc:grpc-stub:1.17.1'

    protobuf files('./server.proto')
    protobuf files('./history.proto')
    protobuf files('./conference.proto')
    protobuf files('./conferenceService.proto')
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.6.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.17.1'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

afterReleaseBuild.dependsOn bintrayUpload

sourceSets {
    main {
        java {
            srcDirs += 'build/generated/source/proto/main/java'
            srcDirs += 'build/generated/source/proto/main/grpc'
        }
    }
}



task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}



publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId group
            artifactId artifactId
            version version
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayPassword
    override = false
    configurations = ['archives']

    pkg {
        userOrg = 'dialog'
        repo = 'maven'
        name = artifactId
        desc = libraryDescription
        websiteUrl = 'https://dlg.im'
        vcsUrl = 'https://github.com/dialogs/server-api-calls-sdk'
        licenses = ["MIT"]
        // issueTrackerUrl = issueTrackerUrl
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                if (hasProperty('bintrayGpgPassword')) {
                    bintray.pkg.version.gpg.passphrase = bintrayGpgPassword
                }
            }
        }
    }
}


// publishing {
//     publications {
//         ServerAPICallsSDK(MavenPublication) {
//             artifactId = 'server-api-calls-sdk'
//             from components.java
//             artifact sourcesJar
//             artifact javadocJar
//         }
//     }
//     repositories {
//         maven {
//             def releasesRepoUrl = "https://nexus.transmit.im/repository/release-local/"
//             def snapshotsRepoUrl = "https://nexus.transmit.im/repository/snapshot-local/"
//             url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//             credentials {
//                 username mavenUser
//                 password mavenPassword
//             }
//         }

//         maven {
//             url = 'https://maven.pkg.github.com/dialogs/dialog-android-platform'
//             credentials {
//                 username githubUser
//                 password githubPassword
//             }
//         }
//     }
// }
